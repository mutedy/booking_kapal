<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Order_perahu extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Order_perahu_model');
    } 

    /*
     * Listing of order_perahu
     */
    function index()
    {
        $data['order_perahu'] = $this->Order_perahu_model->get_all_order_perahu();
        
        $data['_view'] = 'order_perahu/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new order_perahu
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'customer_id' => $this->input->post('customer_id'),
				'perahu_id' => $this->input->post('perahu_id'),
				'created_at' => $this->input->post('created_at'),
				'verified_at' => $this->input->post('verified_at'),
				'booking_at' => $this->input->post('booking_at'),
				'order_status' => $this->input->post('order_status'),
				'uploaded_at' => $this->input->post('uploaded_at'),
				'biaya' => $this->input->post('biaya'),
				'bukti_pembayaran_path' => $this->input->post('bukti_pembayaran_path'),
            );
            
            $order_perahu_id = $this->Order_perahu_model->add_order_perahu($params);
            redirect('order_perahu/index');
        }
        else
        {            
            $data['_view'] = 'order_perahu/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a order_perahu
     */
    function edit($pemesanan_id)
    {   
        // check if the order_perahu exists before trying to edit it
        $data['order_perahu'] = $this->Order_perahu_model->get_order_perahu($pemesanan_id);
        
        if(isset($data['order_perahu']['pemesanan_id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'customer_id' => $this->input->post('customer_id'),
					'perahu_id' => $this->input->post('perahu_id'),
					'created_at' => $this->input->post('created_at'),
					'verified_at' => $this->input->post('verified_at'),
					'booking_at' => $this->input->post('booking_at'),
					'order_status' => $this->input->post('order_status'),
					'uploaded_at' => $this->input->post('uploaded_at'),
					'biaya' => $this->input->post('biaya'),
					'bukti_pembayaran_path' => $this->input->post('bukti_pembayaran_path'),
                );

                $this->Order_perahu_model->update_order_perahu($pemesanan_id,$params);            
                redirect('order_perahu/index');
            }
            else
            {
                $data['_view'] = 'order_perahu/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The order_perahu you are trying to edit does not exist.');
    } 

    /*
     * Deleting order_perahu
     */
    function remove($pemesanan_id)
    {
        $order_perahu = $this->Order_perahu_model->get_order_perahu($pemesanan_id);

        // check if the order_perahu exists before trying to delete it
        if(isset($order_perahu['pemesanan_id']))
        {
            $this->Order_perahu_model->delete_order_perahu($pemesanan_id);
            redirect('order_perahu/index');
        }
        else
            show_error('The order_perahu you are trying to delete does not exist.');
    }

    function verifikasi($id){
        date_default_timezone_set("Asia/Bangkok");
        $params = array(
            "verified_at" => date('Y-m-d H:i:s'),
            "order_status" => 2
        );


        $order      = $this->db->get_where('order_perahu',array('pemesanan_id' => $id))->result_array();
        
        if(count($order) < 1 ){
            redirect('order_perahu/index');
        }

        if($order[0]['order_status'] == 0 || $order[0]['order_status'] == 2 ){
            redirect('order_perahu/index');
        }

        $perahu     = $this->db->get_where('perahu',array('perahu_id' => $order[0]['perahu_id']))->result_array();
        $pengguna   = $this->db->get_where('customer',array('id_customer' => $order[0]['customer_id']))->result_array();

        $this->load->library('email');

       
        $config = Array(
            'protocol' => 'smtp',
            'smtp_host' => 'ssl://smtp.gmail.com',
            'smtp_port' => 465,
            'smtp_user' => 'bookingkapal@gmail.com',
            'smtp_pass' => '1012muted',
            'mailtype'  => 'html', 
            'charset' => 'iso-8859-1'
        );

        
        

        $dataEmail['biaya']          = $order[0]['biaya'];
        $dataEmail['verified_at']    = $params['verified_at'];
        $dataEmail['created_at']     = $order[0]['created_at'];
        $dataEmail['pemesanan_id']   = $id;
        $dataEmail['nama_perahu']    = $perahu[0]['nama_perahu'];
        $dataEmail['spesifikasi_perahu'] = $perahu[0]['spesifikasi_perahu'];
        $dataEmail['nama_pengguna']      = $pengguna[0]['nama'];
        $dataEmail['booking_at']         = $order[0]['booking_at'];

        $this->email->initialize($config);
        $this->email->set_newline("\r\n");   

        $this->email->from('bookingkapal@gmail.com','Booking Kapal'); 
        $this->email->to($pengguna[0]['email']);
        $this->email->subject('Booking Kapal Receipt'); 
        $this->email->message($this->load->view('emails/receipt_v',$dataEmail,TRUE)); 


        //Send mail 
    
        if(!$this->email->send()){
            show_error('Email doesnt not exist, verify canceled');
            $this->email->print_debugger();
        }else{

            $this->db->where('pemesanan_id', $id);
            $this->db->update('order_perahu',$params);
            redirect('order_perahu/index');
        }

        

    }
    function selesai($id){
        $params = array(
            'order_status'  => 4
        );
        $this->db->where('pemesanan_id', $id);
        $this->db->update('order_perahu',$params);
        redirect('order_perahu/index');
    }
    
}
